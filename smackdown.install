<?php
// $Id$

/**
 * @file smackdown.install
 * Install file for smackdown module.
 */

/**
 * Implementation of hook_install().
 */
function smackdown_install() {  
  // Create our content type through drupal_execute. This includes two
  // nodereference fields. Content types that are referenced can be edited
  // by the user through the CCK interface.
  module_load_include('inc', 'smackdown', 'smackdown.content');
  $form_state['values']['type_name'] = '<create>';
  $form_state['values']['macro'] = smackdown_content_export();
  drupal_execute('content_copy_import_form', $form_state);
  
  $t = get_t();
  drupal_set_message($t('Please configure your Node Reference fields !here, 
  chosing which content types they should reference.', array(
    '!here' => l('here', 'admin/content/node-type/smackdown/fields')
  )));
}

function smackdown_uninstall() {
  // Leave it up to the user to remove the content type and CCK fields that we
  // imported in hook_install().

  // Since smackdown stores it's results in votingapi, we should proly get rid 
  // of them too.
  db_query("DELETE FROM {votingapi_vote} WHERE tag = 'smackdown'");
}

/**
 * Implementation of hook_requirements().
 *
 * We require that nodereference is installed before we can import our content
 * type.
 */
function smackdown_requirements($phase) {  
  $requirements = array();
  $t = get_t();
  if ($phase == 'install') {
    if (!defined('MAINTENANCE_MODE') && !_smackdown_nodereference_installed()) {
      $requirements['flag_content_clash']['title'] = $t('Smackdown');
      $requirements['flag_content_clash']['severity'] = REQUIREMENT_ERROR;
      $requirements['flag_content_clash']['description'] = $t('You are trying 
      to install the <em>Smackdown</em> module. However we require that you 
      first have the <em>Node Reference</em> module installed in order to 
      import the default content type. Please enable <em>Node Reference</em>
      and then enable <em>Smackdown</em>.');
    }
  }
  return $requirements;
}

/**
 *  Returns TRUE if the "Node Reference" module, which we need, is installed.
 */
function _smackdown_nodereference_installed() {
  $version = @drupal_get_installed_schema_version('nodereference', TRUE);
  return (isset($version) && $version != SCHEMA_UNINSTALLED);
}